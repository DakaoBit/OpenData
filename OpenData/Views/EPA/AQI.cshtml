@model  IEnumerable<OpenData.Domain.ViewModels.EPA.AQIViewModel>
@{
    ViewBag.Title = "AQI";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    #map {
        width: 100%;
        height: 540px;
        background-color: grey;
    }
</style>

<section class="section">
    <div class="container">
        <h1 class="title">
            全國空氣品質指標
        </h1>

        <div class="columns">
            <div class="column is-8">
                <table style="color:#000;border: 2px solid #1C1C1C;padding:5px;" class="table is-bordered is-striped is-narrow is-hoverable is-fullwidth">
                    <tr>
                        <td style="border: 2px solid #000;" class="bg_green">良好</td>
                        <td style="border: 2px solid #000;" class="bg_yellow">普通</td>
                        <td style="border: 2px solid #000;" class="bg_orange">對敏感族群不健康</td>
                        <td style="border: 2px solid #000;" class="bg_red">對所有族群不健康</td>
                        <td style="border: 2px solid #000;" class="bg_purple">非常不健康</td>
                        <td style="border: 2px solid #000;" class="bg_lakes">危害</td>
                    </tr>
                </table>
            </div>
            <div class="column has-text-right">
                <p class="subtitle">
                    @Model.First().PublishTime 更新
                </p>
            </div>
        </div>

    </div>
</section>

<section class="section">
    <div class="container">
        <div class="columns">
            <div class="column">
                <div class="field is-grouped">
                    <p class="control">
                        <a onclick="initMap('1')" title="空氣品質指標" class="button is-rounded">AQI</a>
                    </p>
                    <p class="control">
                        <a onclick="initMap('2')" title="細懸浮微粒" class="button is-rounded">PM <sub>2.5</sub></a>
                    </p>
                    <p class="control">
                        <a onclick="initMap('3')" title="懸浮微粒" class="button is-rounded">PM <sub>10</sub></a>
                    </p>
                    <p class="control">
                        <a onclick="initMap('4')" title="臭氧每八小時 " class="button is-rounded">O <sub>3</sub> &nbsp; 8hr</a>
                    </p>
                </div>
            </div>
        </div>


        <div class="columns">
            <div class="column is-4">
                <div class="aqi_card">
                    <div id="SiteName" class="aqi_item">
                        @Model.First().SiteName
                    </div>
                    <div id="AQI" class="aqi_item @MyHelper.IsLevel(Model.First().AQI)">
                        @if (!string.IsNullOrWhiteSpace(@Model.First().AQI))
                        {
                            @Model.First().AQI
                        }
                        else
                        {
                            <p>無</p>
                        }
                    </div>
                </div>
                <div class="aqi_item_wrapper">
                    <ul>
                        <li>
                            <span class="aqi_item_cht">狀態</span>
                            <span id="Status" class="aqi_item_index">@Model.First().Status</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">臭氧</span>
                            <span class="aqi_item_eng">O<sub>3</sub>(ppb)</span>
                            <span id="O3" class="aqi_item_index">@Model.First().O3</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">懸浮微粒</span>
                            <span class="aqi_item_eng"> PM<sub>10</sub>(μg/m<sup>3</sup>)</span>
                            <span id="PM10" class="aqi_item_index">@Model.First().PM10</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">細懸浮微粒</span>
                            <span class="aqi_item_eng">PM<sub>2.5</sub>(μg/m<sup>3</sup>)</span>
                            <span id="pm25" class="aqi_item_index">@Model.First().PM25</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">一氧化碳</span>
                            <span class="aqi_item_eng"> CO (ppm)</span>
                            <span id="CO" class="aqi_item_index">@Model.First().CO</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">二氧化硫</span>
                            <span class="aqi_item_eng"> SO<sub>2</sub>(ppb)</span>
                            <span id="SO2" class="aqi_item_index">@Model.First().SO2</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">二氧化氮</span>
                            <span class="aqi_item_eng"> NO<sub>2</sub>(ppb)</span>
                            <span id="NO2" class="aqi_item_index">@Model.First().NO2</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">風速</span>
                            <span class="aqi_item_eng">(m / sec)</span>
                            <span id="WindSpeed" class="aqi_item_index">@Model.First().WindSpeed</span>
                        </li>
                        <li>
                            <span class="aqi_item_cht">風向</span>
                            <span class="aqi_item_eng">(degrees)</span>
                            <span id="WindDirec" class="aqi_item_index">@Model.First().WindDirec</span>
                        </li>
                    </ul>
                </div>
            </div>
            <div class="column is-8">
                <div id="map" class="tile is-child box"></div>
            </div>

        </div>
    </div>
</section>

@* 關閉 *@
@*<section>
        <div class="container">
            <!-- 所屬縣市 -->
            <div class="columns">
                <div class="column is-4">
                    <div class="tile is-child box has-text-centered">
                        <div class="field">
                            <label class="label">選擇縣市：</label>
                            <div class="select is-rounded">
                                <form action="@Url.Action("Index","EPA", new { area = "" })" method="get">
                                    @Html.DropDownList("County", (IEnumerable<SelectListItem>)ViewBag.countyOptions, new { onchange = "if(this.value != 0) { this.form.submit(); }" })
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 區內 監測站 -->
                <div class="column is-8">
                    @foreach (var item in Model)
                    {
                        <div class="columns">
                            <div class="column is-12">
                                <a class="aqi_card" onclick="SelectSite('@item.SiteId')">
                                    <div class="aqi_item">
                                        @item.SiteName
                                    </div>
                                    <div class="aqi_item @MyHelper.IsLevel(item.AQI)">
                                        @if (!string.IsNullOrWhiteSpace(item.AQI))
                                        {
                                            @item.AQI
                                        }
                                        else
                                        {
                                            <p>無</p>
                                        }
                                    </div>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>*@

<script>
    /* 初始化 Map */
    function initMap(category) {
        var map;
        var markers = [];
        var iconBase = "https://airtw.epa.gov.tw/images/";
        var icons = {
            well: {
                icon: iconBase + "air_01.svg",
            },
            ordinary: {
                icon: iconBase + "air_02.svg"
            },
            sensitive: {
                icon: iconBase + "air_03.svg"
            },
            all: {
                icon: iconBase + "air_04.svg"
            },
            unhealthy: {
                icon: iconBase + "air_05.svg"
            },
            danger: {
                icon: iconBase + "air_06.svg"
            },
        };

        //setting map
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 23.6452265, lng: 121.0331083 },
            zoom: 7,
            mapTypeId: 'terrain',
            // Styled Map - Night Mode
            styles: [
           { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
           { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
           { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
           {
               featureType: 'administrative.locality',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#d59563' }]
           },
           {
               featureType: 'poi',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#d59563' }]
           },
           {
               featureType: 'poi.park',
               elementType: 'geometry',
               stylers: [{ color: '#263c3f' }]
           },
           {
               featureType: 'poi.park',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#6b9a76' }]
           },
           {
               featureType: 'road',
               elementType: 'geometry',
               stylers: [{ color: '#38414e' }]
           },
           {
               featureType: 'road',
               elementType: 'geometry.stroke',
               stylers: [{ color: '#212a37' }]
           },
           {
               featureType: 'road',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#9ca5b3' }]
           },
           {
               featureType: 'road.highway',
               elementType: 'geometry',
               stylers: [{ color: '#746855' }]
           },
           {
               featureType: 'road.highway',
               elementType: 'geometry.stroke',
               stylers: [{ color: '#1f2835' }]
           },
           {
               featureType: 'road.highway',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#f3d19c' }]
           },
           {
               featureType: 'transit',
               elementType: 'geometry',
               stylers: [{ color: '#2f3948' }]
           },
           {
               featureType: 'transit.station',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#d59563' }]
           },
           {
               featureType: 'water',
               elementType: 'geometry',
               stylers: [{ color: '#17263c' }]
           },
           {
               featureType: 'water',
               elementType: 'labels.text.fill',
               stylers: [{ color: '#515c6d' }]
           },
           {
               featureType: 'water',
               elementType: 'labels.text.stroke',
               stylers: [{ color: '#17263c' }]
           }
            ]
        });

        //setting closure marker listener
        var addListenerToMarker = function (marker, SiteId) {
            marker.addListener('click', function () {
                // 取得單一監測站資訊
                SelectSite(SiteId);
            });
        }

        //建立地圖 marker 的集合
        GetAllSites.done(function (data) {
            for (var i = 0; i < data.length; i++) {
                if (category == null) {
                    markers = new google.maps.Marker({
                        position: new google.maps.LatLng(data[i].Latitude, data[i].Longitude),
                        map: map,
                        title: data[i].SiteName + ": " + data[i].Status,
                        type: setGrading(data[i].AQI),
                        icon: icons[setGrading(data[i].AQI)].icon,
                    });

                    addListenerToMarker(markers, data[i].SiteId);
                }
                else {
                    //判別 button
                    switch (category) {
                        case '1':
                            markers = new google.maps.Marker({
                                position: new google.maps.LatLng(data[i].Latitude, data[i].Longitude),
                                map: map,
                                title: data[i].SiteName + ": " + data[i].Status,
                                type: setGrading(data[i].AQI),
                                icon: icons[setGrading(data[i].AQI)].icon,
                            });
                            addListenerToMarker(markers, data[i].SiteId);

                            break;
                        case '2':
                            markers = new google.maps.Marker({
                                position: new google.maps.LatLng(data[i].Latitude, data[i].Longitude),
                                map: map,
                                title: data[i].SiteName + ": " + data[i].PM25_AVG,
                                type: setGrading(data[i].PM25_AVG),
                                icon: icons[setGrading(data[i].PM25_AVG)].icon,
                            });
                            addListenerToMarker(markers, data[i].SiteId);
                            break;
                        case '3':
                            markers = new google.maps.Marker({
                                position: new google.maps.LatLng(data[i].Latitude, data[i].Longitude),
                                map: map,
                                title: data[i].SiteName + ": " + data[i].PM10_AVG,
                                type: setGrading(data[i].PM10_AVG),
                                icon: icons[setGrading(data[i].PM10_AVG)].icon,
                            });
                            addListenerToMarker(markers, data[i].SiteId);
                            break
                        case '4':
                            markers = new google.maps.Marker({
                                position: new google.maps.LatLng(data[i].Latitude, data[i].Longitude),
                                map: map,
                                title: data[i].SiteName + ": " + data[i].O3_8hr,
                                type: setGrading(data[i].O3_8hr),
                                icon: icons[setGrading(data[i].O3_8hr)].icon,
                            });
                            addListenerToMarker(markers, data[i].SiteId);
                            break;

                    }
                }


            }
        })
     }

    /* 取得單一監測站 */
    function SelectSite(SiteId) {
        var url = "/EPA/GetSite?SiteId=" + SiteId;
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                $("#SiteName").html(data.SiteName);
                $("#AQI").html(data.AQI);
                isLevel(data.AQI);
                $("#Status").html(data.Status);
                $("#O3").html(data.O3);
                $("#PM10").html(data.PM10);
                $("#PM25").html(data.PM25);
                $("#CO").html(data.CO);
                $("#SO2").html(data.SO2);
                $("#NO2").html(data.NO2);
                $("#WindSpeed").html(data.WindSpeed);
                $("#WindDirec").html(data.WindDirec);
            }
        })
    }

    /* 取得所有監測站 */
    var GetAllSites = $.ajax({
        type: "GET",
        url: '@Url.Action("GetAllSite", "EPA")',
        dataType: 'json',
    });

    /* AQI 分類 */
    function setGrading(aqi) {
        if (aqi <= 50)
            return "well";
        else if (50 < aqi && aqi <= 100)
            return "ordinary";
        else if (100 < aqi && aqi <= 150)
            return "sensitive";
        else if (150 < aqi && aqi <= 200)
            return "all";
        else if (200 < aqi && aqi <= 300)
            return "unhealthy";
        else if (300 < aqi && aqi <= 400)
            return "danger";
        else
            return null;
    }

    /* 設定 AQI color */
    function isLevel(aqi){
        if (aqi <= 50)
            $("#AQI").removeClass().addClass("aqi_item bg_green");
        else if (50 < aqi && aqi <= 100)
            $("#AQI").removeClass().addClass("aqi_item bg_yellow");
        else if (100 < aqi && aqi <= 150)
            $("#AQI").removeClass().addClass("aqi_item bg_orange");
        else if (150 < aqi && aqi <= 200)
            $("#AQI").removeClass().addClass("aqi_item bg_red");
        else if (200 < aqi && aqi <= 300)
            $("#AQI").removeClass().addClass("aqi_item bg_purple");
        else if (300 < aqi && aqi <= 400)
            $("#AQI").removeClass().addClass("aqi_item bg_lakes");
        else
            return null;
    }

</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDRYyKhiXS0Bmtfld_yftl2ATtitLYl7k0&callback=initMap">
</script>